<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>